(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{501:function(e,a,t){"use strict";t.r(a);var r=t(28),o=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"week-3-destructuring-async-cordova-camera"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#week-3-destructuring-async-cordova-camera"}},[e._v("#")]),e._v(" Week 3 - Destructuring, Async, Cordova Camera")]),e._v(" "),t("h2",{attrs:{id:"destructuring"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#destructuring"}},[e._v("#")]),e._v(" Destructuring")]),e._v(" "),t("p",[e._v("A new feature that was added with ES6 was "),t("code",[e._v("destructuring")]),e._v(", which is a way that we can extract properties or values from Objects or Arrays. Typically this is done when passing a variable to a function. If that variable is an object that has a dozen properties but we only want one or two then we can use destructuring to quickly grab those two properties with one line of code.")]),e._v(" "),t("p",[t("RouterLink",{attrs:{to:"/modules/week3/destructuring.html"}},[e._v("Learn more about Destructuring")])],1),e._v(" "),t("h2",{attrs:{id:"rest-and-spread"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rest-and-spread"}},[e._v("#")]),e._v(" Rest and Spread")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("rest")]),e._v(" and "),t("code",[e._v("spread")]),e._v(" operators allow us to extract a range of values from an array or to assign a range of values from an array to a list of variables, again with only one line of code.")]),e._v(" "),t("p",[t("RouterLink",{attrs:{to:"/modules/week3/rest-spread.html"}},[e._v("Learn more about Rest and Spread Operators")])],1),e._v(" "),t("h2",{attrs:{id:"async-await"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#async-await"}},[e._v("#")]),e._v(" Async Await")]),e._v(" "),t("p",[e._v("When you call an asynchronous method like fetch, loading an image, timers, getting geolocation, talking to a database or reading a file, then we need to handle this in our code. Most asynchronous tasks have a callback method that we can use. Another approach we can use is wrapping the task inside a Promise and then using a "),t("code",[e._v("then()")]),e._v(".")]),e._v(" "),t("p",[e._v("If you want to use the Promise version but want to simplify your code then we can use the keywords "),t("code",[e._v("async")]),e._v(" and "),t("code",[e._v("await")]),e._v(".")]),e._v(" "),t("p",[t("RouterLink",{attrs:{to:"/modules/week3/async.html"}},[e._v("Learn about async-await")])],1),e._v(" "),t("h2",{attrs:{id:"merges-folder"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#merges-folder"}},[e._v("#")]),e._v(" Merges Folder")]),e._v(" "),t("p",[e._v("Cordova lets you keep the bulk of your code for your project in one CSS file and one JS file. However, there will be times where you need to do something differently depending on whether it is an Android App or an iOS app.")]),e._v(" "),t("p",[e._v("We can use the "),t("code",[e._v("merges")]),e._v(" folder to achieve this.")]),e._v(" "),t("YouTube",{attrs:{title:"platform specific cordova",url:"https://www.youtube.com/embed/PPI_9ilON7Y"}}),e._v(" "),t("h2",{attrs:{id:"cordova-camera-plugin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cordova-camera-plugin"}},[e._v("#")]),e._v(" Cordova Camera Plugin")]),e._v(" "),t("p",[e._v("To be able to access the mobile device camera to take pictures or videos and then use the pictures or videos on a web page inside a Cordova app, we need to use the "),t("code",[e._v("cordova-plugin-camera")]),e._v(" plugin.")]),e._v(" "),t("p",[t("RouterLink",{attrs:{to:"/modules/week3/cordova-camera.html"}},[e._v("Learn how to use the Camera plugin")])],1),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("TODO")]),e._v(" "),t("ul",[t("li",[e._v("Read the content and watch the videos for Weeks 3 and 4")]),e._v(" "),t("li")])])],1)}),[],!1,null,null,null);a.default=o.exports}}]);